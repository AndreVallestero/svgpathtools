name: Generate Coverage Report

on:
  push:
  pull_request:

jobs:
  analyze:
    name: Compute Coverage
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # install deps
      - name: Install dependencies for ${{ matrix.os }} Python ${{ matrix.python-version }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install scipy coverage

      # find and run all unit tests
      - name: Run unit tests
        run: |
          coverage run --source=svgpathtools -m unittest discover test
          coverage html  # generate static website detailing coverage
          echo "coverage: $(coverage report | grep TOTAL | awk '{ print $4 }')" > htmlcov/percentage.yml  # get overall percentage

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: svgpathtools-coverage
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: htmlcov
          useforce: true
#
#      # send report to Codacy
#      - name: Report to Codacy
#        run: |
#          export CODACY_API_TOKEN=${{ secrets.CODACY_API_TOKEN }}
#          export CODACY_ORGANIZATION_PROVIDER=gh
#          export CODACY_USERNAME=mathandy
#          export CODACY_PROJECT_NAME=svgpathtools
#          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r <coverage report file name ???>